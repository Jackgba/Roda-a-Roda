#include <stdio.h>
#include <stdlib.h>
#include <locale.h>
#include <string.h>
#include <windows.h>

float premios(void);
int prepara(char[][17],char[][17],int);
void placar (char[],char[][17],int,float[]);
int verificaLetra (char[][17], char[][17], char, int);

int main(){

	setlocale(LC_ALL, "Portuguese");

	float placarjogador[3]= {0,0,0}, rodar;
	int i=0, j, sorteio,sorteiopalavras, qtddPalav=3, totalLetras, acerto, totalAcertos=0, regressiva;
	char vetpalavras[3][17] = {"MOTOR", "EMBREAGEM","ESCAPAMENTO"}, palavraDescoberta[3][17];
	char pista[17] = {"Automovel"}, letraescolhida, palavrafinal[17];
	
	//futuramente adicionar o sorteio da pista

	totalLetras = prepara(vetpalavras,palavraDescoberta,qtddPalav);
	
	do {
		placar(pista,palavraDescoberta,qtddPalav,placarjogador);	

    printf("\nAPAGAR ESTA LINHA DEPOIS---Letras descobertas: %d / %d\n", totalAcertos, totalLetras);

		printf("\nJogador %d: Rode a roda!", i+1);
	  fflush(stdin);
		getchar();
		rodar = premios();

		if (rodar == 0){
			printf("Passa a vez!\n");
			i = (i+1)%3; //vai para próximo jogador
      printf("A vez será passada para o jogador %d.", i);
		}
	
		else if(rodar == 0.01f){
			printf("Perdeu tudo!\n");
			placarjogador[i] = 0; //zerar placar do jogador ativo
			i = (i+1)%3; //vai para próximo jogador
		}
		else { 
			do{ //perguntar letra até o usuário digitar um caracter válido
				printf("Uma letra por R$%.2f: ", rodar);
				fflush(stdin);
				scanf("%c", &letraescolhida);
				
			} while ( letraescolhida < 'A' || ( letraescolhida > 'Z' && letraescolhida < 'a' ) || letraescolhida > 'z' ); 
			
			if ( letraescolhida >= 'a' && letraescolhida <= 'z')
				letraescolhida -= 32;
			
			acerto = verificaLetra (vetpalavras,palavraDescoberta,letraescolhida,qtddPalav);
      
			if (acerto>0) {
				placarjogador[i] = placarjogador[i] + rodar*acerto;
				totalAcertos += acerto; //armazena total de caracteres descobertos
			}
      else if (acerto == -1){
        i = (i+1)%3;//vai para próximo jogador
        printf("A letra %c já foi descoberta.\nA vez será passada para o jogador %d.", letraescolhida, i);;
      }
			else{
        i = (i+1)%3;//vai para próximo jogador
        printf("Não existe letra %c na palavra.\nA vez será passada para o jogador %d.", letraescolhida, i);
			}
		}
	} while ( totalLetras > totalAcertos + 3 );
	// -------------------------
	//Pelo visto não é possível fazer uma contagem regressiva em C junto com scanf e gets. êê professora hein
	do{

	printf("Jogador %d: Faltam %d letras para completar a palavra.\n", i, totalLetras-totalAcertos);
	printf("Você tem 5 segundos para pensar e depois digitar a palavra.\n");
	printf("Valendo R$ %.2f, a palavra é: ", rodar+placarjogador[i]);
	gets(palavrafinal);
		for(regressiva=5;regressiva!=0; regressiva--){
		printf("%d\n", regressiva);
		Sleep(1000);
	}  i = (i+1)%3;
 
} while (totalLetras != totalAcertos);
	
	// --------------------------
		
	
return 0;
}

float premios(){
	float premios[12] = {100,900,600,1000,0,400,200,800,0.01f,300,500,700};
	float valor;
	srand(time(NULL));
	valor = premios[rand()%12];
	return valor;
}
int prepara(char vetpalavras[][17], char palavraDescoberta[][17], int qtddPalav){ 
	int i, j, contagem=0, qtddLetras;
	
	for (i=0;i<qtddPalav;i++) { //percorre todas as palavras
		qtddLetras = strlen(vetpalavras[i]);
		for (j=0;j<qtddLetras;j++){ //percorre todas as letras até o tamanho de cada palavra
			palavraDescoberta[i][j]='_';
			contagem++; //conta quantos caracteres existem no total das palavras
		}
	}
	return contagem;
}

void placar (char pista[], char palavra[][17], int qtdd, float jog[] ){
	int i;
	printf("\n\t\t\tA palavra está associada com: %s\n\n\t\t\t", pista);
	for (i=0; i<qtdd; i++) printf("%s\t", palavra[i]);
	printf("\n\nJogador 1\tJogador 2\tJogador3\n");
	printf("==========\t==========\t==========\n");
	printf("R$%.2f\t\tR$%.2f\t\tR$%.2f\n",jog[0],jog[1],jog[2]);
}

int verificaLetra (char vetpalavras[][17], char palavraDescoberta[][17], char letra, int qtddPalav){
	int i, j, acert=0;
	for (i=0; i<qtddPalav ; i++){ //percorre todas as palavras
		for (j=0;j<strlen(vetpalavras[i]);j++){ //percorre todas as letras até atingir o tamanho da palavra
      if (palavraDescoberta[i][j] == letra) return -1; //se a letra já foi descoberta, retorna -1
			else if (vetpalavras[i][j] == letra ) { //compara letra por letra da palavra original para ver se é igual
				palavraDescoberta[i][j] = letra; //revela a letra na palavra descoberta
				acert++; //contagem para saber quantas letras foram descobertas
			} 
		}
	}
  return acert;
}
