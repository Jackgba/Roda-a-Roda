#include <stdio.h>
#include <conio.h>
#include <stdlib.h>
#include <locale.h>
#include <string.h>

float premios(void);
void prepara(char[][17],char[][17],int);
void placar (char[],char[][17],int,float,float,float);
int verificaLetra (char[][17], char[][17], char, int);

main(){

	setlocale(LC_ALL, "Portuguese");

	float jogador1=0, jogador2=0, jogador3=0, rodar;
	int i, j, sorteio,sorteiopalavras, qtddPalav=3, acerto;
	char vetpalavras[3][17] = {"MOTOR", "EMBREAGEM","ESCAPAMENTO"}, palavraDescoberta[3][17];
	char pista[17] = {"Automóvel"}, letraescolhida;
	
	//futuramente adicionar o sorteio da pista

	prepara(vetpalavras,palavraDescoberta,qtddPalav);
	
	//acho que aqui vai iniciar um loop da rodada 
	placar(pista,palavraDescoberta,qtddPalav,jogador1,jogador2,jogador3);	



	printf("\nRode a roda!\n");
	fflush(stdin);
	rodar = premios();

	if (rodar == 0){
		printf("Passa a vez!\n");
		//termina essa rodada e vai para próximo jogador
	}

	else if(rodar == 0.1){
		printf("Perdeu tudo!\n");
		//zerar placar do jogador ativo
		//termina essa rodada e vai para próximo jogador
	}
	else {
		do{ //perguntar letra até o usuário digitar um caracter válido
			printf("Uma letra por R$%.2f: ", rodar);
			fflush(stdin);
			scanf("%c", &letraescolhida);
		} while ( letraescolhida < 'A' || ( letraescolhida > 'Z' && letraescolhida < 'a' ) || letraescolhida > 'z' );
		
		if (letraescolhida <= 'z' && letraescolhida >= 'a') 
			letraescolhida = letraescolhida - 32;
		acerto = verificaLetra (vetpalavras,palavraDescoberta,letraescolhida,qtddPalav);
		if (acerto>0) {
			jogador1+=rodar*acerto;
			//jogador continua jogando??? não ficou claro no exercício
		}
		else{
			//passa para próximo jogador
		}
	}
	// aqui já devia começar a repetir
	placar(pista,palavraDescoberta,qtddPalav,jogador1,jogador2,jogador3);

	
system("pause");
}

float premios(){
	float premios[12] = {100,900,600,1000,0,400,200,800,0.01,300,500,700};
	float valor;
	srand(time(NULL));
	valor = premios[rand()%13];
	return valor;
}
void prepara(char vetpalavras[][17], char palavraDescoberta[][17], int qtddPalav){ 
	int i, j;
	for (i=0;i<qtddPalav;i++) { //percorre todas as palavras
		for (j=0;j<strlen(vetpalavras[i]);j++){ //percorre todas as letras até o tamanho de cada palavra
			palavraDescoberta[i][j]='_';
		}
	}
}

void placar (char pista[], char palavra[][17], int qtdd, float jog1, float jog2, float jog3){
	int i;
	printf("\t\t\tA palavra está associada com: %s\n\n\t\t\t", pista);
	for (i=0; i<qtdd; i++) printf("%s\t", palavra[i]);
	printf("\n\nJogador 1\tJogador 2\tJogador3\n");
	printf("==========\t==========\t==========\n");
	printf("R$%.2f\t\tR$%.2f\t\tR$%.2f\n",jog1,jog2,jog3);
}

int verificaLetra (char vetpalavras[][17], char palavraDescoberta[][17], char letra, int qtddPalav){
	int i, j, acert=0;
	for (i=0; i<qtddPalav ; i++){ //percorre todas as palavras
		for (j=0;j<strlen(vetpalavras[i]);j++){ //percorre todas as letras até atingir o tamanho da palavra
			if (vetpalavras[i][j] == letra) { //compara letra por letra da palavra original
			//precisa validar para quando o usuário digitar também a letra minúscula correspondente
				palavraDescoberta[i][j] = letra; //revela a letra na palavra descoberta
				acert++; //contagem para saber se apareceu letra alguma vez
			} 
		}
	}
}


