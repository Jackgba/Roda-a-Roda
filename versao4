#include <stdio.h>
#include <conio.h>
#include <stdlib.h>
#include <locale.h>
#include <string.h>

float premios(void);
int prepara(char[],char[]);
void placar (char[],char[][17],int,float[]);
int verificaLetra (char[], char[], char);

main(){

	//setlocale(LC_ALL, "Portuguese");

	float placarjogador[3]= {0,0,0}, rodar;
	int i=0, j, sorteio,sorteiopalavras, qtddPalav=3, totalLetras=0, acerto=0, totalAcertos=0;
	char vetpalavras[3][17] = {"MOTOR", "EMBREAGEM","ESCAPAMENTO"}, palavraDescoberta[3][17];
	char pista[17] = {"Automovel"}, letraescolhida;
	
	//futuramente adicionar o sorteio da pista
	for ( j=0; j<qtddPalav; j++) totalLetras += prepara(vetpalavras[j],palavraDescoberta[j]);
	
	
	//teste para ver se imprime ok
	for (i=0; i<3; i++) { 
		for (j=0; palavraDescoberta[i][j] != '\0'; j++) {
			printf("%c ", palavraDescoberta[i][j]);
		}
		printf(".");
	}
	printf("\n");
			
		
	do {
		placar(pista,palavraDescoberta,qtddPalav,placarjogador);	

		printf("\nJogador %d: Rode a roda!", i+1);
		fflush(stdin);
		getchar();
		rodar = premios();

		if (rodar == 0){
			printf("Passa a vez!\n");
			i = (i+1)%3; //termina essa rodada e vai para próximo jogador
		}
	
		else if(rodar == 0.01f){
			printf("Perdeu tudo!\n");
			placarjogador[i] = 0; //zerar placar do jogador ativo
			i = (i+1)%3; //vai para próximo jogador
		}
		else { 
			do{ //perguntar letra até o usuário digitar um caracter válido
				printf("Uma letra por R$%.2f: ", rodar);
				fflush(stdin);
				scanf("%c", &letraescolhida);
				//pensar em um jeito de evitar que o usuário repita o mesmo caracter
				
			} while ( letraescolhida < 'A' || ( letraescolhida > 'Z' && letraescolhida < 'a' ) || letraescolhida > 'z' ); 
			
			if ( letraescolhida >= 'a' && letraescolhida <= 'z')
				letraescolhida -= 32;
			
			for ( j=0; j<qtddPalav; j++) acerto += verificaLetra (vetpalavras[j],palavraDescoberta[j],letraescolhida);
			if (acerto>0) {
				placarjogador[i] = placarjogador[i] + rodar*acerto;
				totalAcertos += acerto; //armazena total de caracteres descobertos
			}
			else{
				i = (i+1)%3; //vai para próximo jogador
			}
		}
	} while ( totalLetras > totalAcertos + 3 );
	
	//implementar o final do programa
		
	

system("pause");
}

float premios(){
	float premios[12] = {100,900,600,1000,0,400,200,800,0.01f,300,500,700};
	float valor;
	srand(time(NULL));
	valor = premios[rand()%12];
	return valor;
}

int prepara(char vetpalavras[], char palavraDescoberta[]){ 

	int j, contagem=0, qtddLetras;
	qtddLetras = strlen(vetpalavras);
		for (j=0;j<qtddLetras;j++){ //percorre todas as letras até o tamanho de cada palavra
			palavraDescoberta[j]='_';
			contagem++; //conta quantos caracteres existem no total das palavras
		}
	return contagem;
}

void placar (char pista[], char palavra[][17], int qtdd, float jog[] ){
	int i;
	printf("A palavra está associada com: %s\n", pista);
	for (i=0; i<qtdd; i++) printf("%s ", palavra[i]);
	printf("\n\nJogador 1\tJogador 2\tJogador3\n");
	printf("==========\t==========\t==========\n");
	printf("R$%.2f\t\tR$%.2f\t\tR$%.2f\n",jog[0],jog[1],jog[2]);
}

int verificaLetra (char vetpalavras[], char palavraDescoberta[], char letra ){
	int i, j, acert=0;
	for (j=0;j<strlen(vetpalavras);j++){ //percorre todas as letras até atingir o tamanho da palavra
		if (vetpalavras[j] == letra) { //compara letra por letra da palavra original
			palavraDescoberta[j] = letra; //revela a letra na palavra descoberta
			acert++; //contagem para saber quantas letras foram descobertas
		} 
	}
	return acert;
}

